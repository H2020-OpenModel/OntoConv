[project]
name = "ontoconv"
description = "Tool connecting OntoFlow to ExecFlow."
readme = "README.md"
license = {file = "LICENSE"}
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Natural Language :: English",
    "Operating System :: OS Independent",
]
keywords = ["OpenModel", "OntoFlow", "ExecFlow", "workflow"]
requires-python = "~=3.8"
dynamic = ["version"]
dependencies = [
    "tripper >= 0.3.4, < 0.3.5",
    "rdflib >=6.1, < 7.0.1",
    "pyyaml ~=6.0",
    # It does not depend on oteapi-dlite for running,
    # but the output cannot be run without at least version
    # 0.3.0 of oteapi-dlite
    "oteapi-dlite >= 0.3.0, <0.3.3",
    "otelib >=0.4.1,<0.5",
]

[project.optional-dependencies]
docs = []
pre-commit = [
    "pre-commit ~=4.0.1",
    "pylint ~=3.2",
]
testing = [
    "pytest ~=7.4",
    "pytest-cov ~=4.1",
    "deepdiff ~=7.0",
]
dev = [
    "pre-commit ~=4.0.1",
    "pylint ~=3.2",
    "pytest ~=7.4",
    "pytest-cov ~=4.1",
    "deepdiff ~=7.0",
]

[project.urls]
Home = "https://github.com/H2020-OpenModel/OntoConv"
Source = "https://github.com/H2020-OpenModel/OntoConv"
"Issue Tracker" = "https://github.com/H2020-OpenModel/issues"
#Documentation = "https://H2020-OpenModel.github.io/OntoConv"
#Changelog = "https://github.com/H2020-OpenModel/OntoConv/blob/master/CHANGELOG.md"
#Package = "https://pypi.org/project/ontoconv"

[build-system]
requires = ["flit_core >=3.4,<4"]
build-backend = "flit_core.buildapi"

[tool.isort]
line_length = 79  # PEP8

[tool.black]
line-length = 79

[tool.mypy]
python_version = "3.8"
ignore_missing_imports = false
scripts_are_modules = true
warn_unused_configs = true
show_error_codes = true
allow_redefinition = true

[tool.pylint]
max-line-length = 79
max-args = 10
max-public-methods = 25
max-locals = 20
disable = [
    "fixme",
    "invalid-name",
]
good-names = [
    # Default
    "i", "j", "k", "ex", "Run", "_",
    # Triplestore instance
    "ts",
    # Triple components: subject, predicate, object
    "s", "p", "o",
]
generated-members = [
    # How to tell pylint that this should be limited to members of AttrDict?
    # Preferable we should use a regex, like r"AttrDict\..+"
    "aiida_plugin",
    "command",
    "install_command",
]


[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-rs --cov=tripper --cov-report=term --doctest-modules"
filterwarnings = [
    "ignore:.*imp module.*:DeprecationWarning",
]
